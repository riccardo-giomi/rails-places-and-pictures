- # locals: (picture:, controls: [])

- content = capture do
  = form_with(model: picture, class: 'contents') do |form|
    - if picture.errors.any?
      div id="errors-explanation"
        - errors_count = pluralize(picture.errors.count, 'error')
        h2 = "#{errors_count} prohibited this picture from being saved:"
        ul class="list-disc"
          - picture.errors.each do |error|
            li = error.full_message

    div class="my-3"
      = form.label :description
      = form.text_field :description
      - if error = picture.errors[:description]&.first
        p class="field-error-explanation" = error.capitalize


    div class="my-3"
      = form.label :notes
      = form.text_area :notes
      - if error = picture.errors[:notes]&.first
        p class="field-error-explanation" = error.capitalize


    div class="my-3"
      = form.label :file
      / set is_required: to true for files with attached: true validations
      = render 'application/form_file', form:, field: 'file', file: picture.persisted_file, is_required: false

    div class="my-3"
      = render 'application/form_single_association', form:, name: Place, association: :place

    div class="pt-3"
      = form.submit class: 'btn-submit'

div class="content-box"
  - if controls.empty?
    = content
  - else
    div class="lg:grid lg:grid-cols-5 lg:gap-2"
      div class="lg:col-span-4"
        = content

      div class="pt-3 lg:pt-0 lg:col-span-1"
        - unless controls.empty?
          div class="lg:sticky lg:top-1"
            - if controls.include?(:show)
              = link_to 'Show picture', picture, class: 'mb-2 button', title: 'Show picture'
            - if controls.include?(:edit)
              = link_to 'Edit picture', edit_picture_path(picture), class: 'mb-2 button', title: 'Edit picture'
            - if controls.include?(:destroy)
              = delete_button_with_dialog 'Are you sure you want to delete this picture?', 'Delete picture', picture, class: 'mb-2 btn-important'
